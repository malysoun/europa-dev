# -*- mode: ruby -*-
# vi: set ft=ruby :
#

zenoss ||= {}

Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  #####################################################################
  #                                                                   #
  #  DEFAULT: 64-bit with dependencies preinstalled, no vagrant user  #
  #                                                                   #
  #####################################################################
  config.vm.box     = "europa-dev-64-1"
  config.vm.box_url = "http://vagrant.zendev.org/boxes/europa-dev-64-1.box"

  config.ssh.username = "zendev"
  
  #####################################################################
  #                                                                   #
  #  ALTERNATIVES: 32-bit with vagrant user                           #
  #                                                                   #
  #####################################################################

  # Older version without zendev user preconfigured. You will also need to use
  # the NFS-shared synced /zensrc folder, commented out below
  #config.vm.box     = "europa-dev"
  #config.vm.box_url = "http://vagrant.zendev.org/boxes/europa-dev-base.box"

  ## Use this one if you're not on the VPN. You'll need to comment out the
  ## default options above and you'll need to use NFS synced folders, below.
  # config.vm.box     = "fedora18"
  # config.vm.box_url = "http://static.stasiak.at/fedora-18-x86-2.box"

  #####################################################################
  #                                                                   #
  #  SYNCED FOLDERS: Default VBox shared, NFS alternative             #
  #                                                                   #
  #####################################################################
  config.vm.synced_folder "../../src", "/zensrc", owner:"zendev",
      group:"zendev", :mount_options => ['dmode=775','fmode=775']

  ## Comment out the above synced_folder configuration and uncomment this one
  ## to use NFS instead of shared folders. You will likely see a significant
  ## reduction in build time.
  #config.vm.synced_folder "../../src", "/zensrc", 
  #              :nfs => true

  #####################################################################
  #                                                                   #
  #                            NETWORKING                             #
  #                                                                   #
  #####################################################################
  # Forward zproxy to host
  config.vm.network :forwarded_port, guest: 8080, host: 8080
  # Forward zope to host
  config.vm.network :forwarded_port, guest: 9080, host: 9080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network :private_network, ip: "192.168.33.10"

  ## Bridged networks make the machine appear as another physical device on
  ## your network. You will need to commend out the private network config
  ## above.
  # config.vm.network :public_network

  config.vm.provider :virtualbox do |vb|
    # Don't boot with headless mode
    # vb.gui = true

    # Use VBoxManage to customize the VM. For example to change memory:
    vb.customize ["modifyvm", :id, 
        "--memory", "4096", 
        "--cpus", "4", 
        "--ioapic", "on", 
        "--natdnshostresolver1", "on"]
  end

  config.vm.provider :vmware_fusion do |fusion,override|
      override.vm.box_url = "http://aws-vagrant-box.s3.amazonaws.com/Fedora-18-x86_64_fusion.box"
      fusion.vmx['memsize'] = 4096
      fusion.vmx['numvcpus'] = 4
      fusion.vmx['displayName'] = 'europa dev'
      fusion.vmx['annotation'] = "a general vagrant vm"
  end

  config.vm.provider :vmware_workstation do |workstation,override|
      override.vm.box_url = "http://aws-vagrant-box.s3.amazonaws.com/Fedora-18-x86_64_workstation.box"
      workstation.vmx['memsize'] = 4096
      workstation.vmx['numvcpus'] = 4
      workstation.vmx['displayName'] = 'europa dev'
      workstation.vmx['annotation'] = "a general vagrant vm"
  end

  #
  # View the documentation for the provider you're using for more
  # information on available options.

  # Enable provisioning with chef solo, specifying a cookbooks path, roles
  # path, and data_bags path (all relative to this Vagrantfile), and adding
  # some recipes and/or roles.
  #
  config.vm.provision :chef_solo do |chef|
    chef.cookbooks_path = "../../chef/cookbooks"

    ## These recipes are preinstalled on the default base box.
    #chef.add_recipe "zenoss::yum"
    #chef.add_recipe "build-essential"
    #chef.add_recipe "java"
    #chef.add_recipe "maven"

    ## These recipes are as preinstalled as possible, but chef will ensure
    ## the correct services are all started.
    chef.add_recipe "memcached"
    chef.add_recipe "python"
    chef.add_recipe "rabbitmq"
    chef.add_recipe "zenoss::dependencies"
    chef.add_recipe "zenoss::zenhome"

    # These recipes actually build Zenoss.
    chef.add_recipe "zenoss::sourcebuild"
    chef.add_recipe "zenoss::mkzenossinstance"

    chef.json = {
        :rabbitmq => {
            :version => '3.1.5'
        },
        :zenoss => zenoss.merge({
            :zenhome => "/opt/zenoss",
            :username => "zendev",
            :group => "zendev",
            # shadow hash of "zendev"
            :password => "$1$GeQbsUb0$a2ETbvbO2ONgt/.7VBpTK1",
            # Paste in your pubkey here if you wish
            :authorized_keys => ""
        }),
        :maven  => {
            :version   => 3,
            :setup_bin => true
        },
        :python => {
            :version => "2.7.3"
        },
        :java   => {
            :install_flavor => "openjdk",
            :jdk_version    => "7"
        },
        :mysql  => {
            :server_root_password   => "zenoss",
            :server_repl_password   => "zenoss",
            :server_debian_password => "zenoss"
        }
    }
  end

  # Run any custom commands.
  mypath = File.expand_path("~/.europarc")
  if File.exist? mypath
      config.vm.provision :shell, :path => mypath
  end

end
